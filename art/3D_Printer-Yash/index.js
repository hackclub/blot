/*
@title: 3D_Printer
@author: Yash S.
@snapshot: image1.png
*/

const width = 100;
const height = 100;

//Editable values!!
const x = bt.randInRange(45, 55);
// const y = 67;
const y = bt.randInRange(31, 67);
const rail_width = 2; // Can be 1 or 2!
const img = [
    [
      [19.5049991607666, 62.85300064086914],
      [19.5049991607666, 12.852999687194824],
    ],
    [
      [8.227999687194824, 16.957000732421875],
      [30.7810001373291, 8.74899959564209],
      [31.72100067138672, 8.406999588012695],
      [32.45800018310547, 7.730999946594238],
      [32.88100051879883, 6.824999809265137],
      [32.92399978637695, 5.826000213623047],
      [32.582000732421875, 4.886000156402588],
      [31.906999588012695, 4.14900016784668],
      [31, 3.7260000705718994],
      [30.000999450683594, 3.683000087738037],
      [7.448999881744385, 11.890999794006348],
      [6.508999824523926, 12.232999801635742],
      [5.771999835968018, 12.909000396728516],
      [5.348999977111816, 13.8149995803833],
      [5.304999828338623, 14.814000129699707],
      [5.646999835968018, 15.753999710083008],
      [6.322999954223633, 16.490999221801758],
      [7.229000091552734, 16.913999557495117],
      [8.227999687194824, 16.957000732421875],
      [6.51800012588501, 12.258999824523926],
    ],
    [
      [7.458000183105469, 11.916999816894531],
      [9.168000221252441, 16.614999771118164],
    ],
    [
      [10.107999801635742, 16.273000717163086],
      [8.39799976348877, 11.574999809265137],
    ],
    [
      [9.336999893188477, 11.232999801635742],
      [11.04699993133545, 15.930999755859375],
    ],
    [
      [11.987000465393066, 15.58899974822998],
      [10.277000427246094, 10.890999794006348],
    ],
    [
      [11.217000007629395, 10.548999786376953],
      [12.927000045776367, 15.246999740600586],
    ],
    [
      [13.866000175476074, 14.904999732971191],
      [12.156000137329102, 10.206999778747559],
    ],
    [
      [13.095999717712402, 9.864999771118164],
      [14.805999755859375, 14.562999725341797],
    ],
    [
      [15.746000289916992, 14.220999717712402],
      [14.03600025177002, 9.52299976348877],
    ],
    [
      [14.975000381469727, 9.180999755859375],
      [16.68600082397461, 13.878999710083008],
    ],
    [
      [17.625, 13.536999702453613],
      [15.914999961853027, 8.83899974822998],
    ],
    [
      [16.854999542236328, 8.496999740600586],
      [18.565000534057617, 13.194999694824219],
    ],
    [
      [19.5049991607666, 12.852999687194824],
      [17.795000076293945, 8.154999732971191],
    ],
    [
      [18.733999252319336, 7.813000202178955],
      [20.444000244140625, 12.51099967956543],
    ],
    [
      [21.384000778198242, 12.168999671936035],
      [19.673999786376953, 7.4710001945495605],
    ],
    [
      [20.61400032043457, 7.129000186920166],
      [22.323999404907227, 11.82699966430664],
    ],
    [
      [23.26300048828125, 11.484999656677246],
      [21.55299949645996, 6.7870001792907715],
    ],
    [
      [22.493000030517578, 6.445000171661377],
      [24.202999114990234, 11.142999649047852],
    ],
    [
      [25.14299964904785, 10.800999641418457],
      [23.433000564575195, 6.103000164031982],
    ],
    [
      [24.371999740600586, 5.761000156402588],
      [26.082000732421875, 10.458999633789062],
    ],
    [
      [27.02199935913086, 10.116999626159668],
      [25.312000274658203, 5.419000148773193],
    ],
    [
      [26.25200080871582, 5.076000213623047],
      [27.961999893188477, 9.774999618530273],
    ],
    [
      [28.902000427246094, 9.432999610900879],
      [27.19099998474121, 4.734000205993652],
    ],
    [
      [28.131000518798828, 4.392000198364258],
      [29.840999603271484, 9.090999603271484],
    ],
    [
      [30.7810001373291, 8.74899959564209],
      [29.070999145507812, 4.050000190734863],
    ],
    [
      [30.01099967956543, 3.7079999446868896],
      [31.72100067138672, 8.406999588012695],
    ],
    [
      [32.57500076293945, 7.829999923706055],
      [31.06999969482422, 3.694999933242798],
    ],
    [
      [5.697999954223633, 12.930000305175781],
      [7.203000068664551, 17.06399917602539],
    ],
    [
      [16.854999542236328, 8.496999740600586],
      [12.758999824523926, 5.629000186920166],
      [14.637999534606934, 4.945000171661377],
      [18.733999252319336, 7.813000202178955],
    ],
    [
      [18.733999252319336, 7.813000202178955],
      [16.854999542236328, 8.496999740600586],
    ],
    [
      [15.854999542236328, 7.796000003814697],
      [17.733999252319336, 7.111999988555908],
    ],
    [
      [16.735000610351562, 6.4120001792907715],
      [14.854999542236328, 7.0960001945495605],
    ],
    [
      [13.854999542236328, 6.395999908447266],
      [15.734999656677246, 5.711999893188477],
    ],
    [
      [19.5049991607666, 12.852999687194824],
      [34.505001068115234, 12.852999687194824],
      [39.505001068115234, 12.852999687194824],
      [44.124000549316406, 14.767000198364258],
      [47.65999984741211, 18.302000045776367],
      [49.573001861572266, 22.92099952697754],
      [49.573001861572266, 27.92099952697754],
      [47.65999984741211, 32.54100036621094],
      [44.124000549316406, 36.07600021362305],
      [39.505001068115234, 37.9900016784668],
      [44.124000549316406, 39.90299987792969],
      [47.65999984741211, 43.43899917602539],
      [49.573001861572266, 48.05799865722656],
      [49.573001861572266, 53.05799865722656],
      [47.65999984741211, 57.678001403808594],
      [44.124000549316406, 61.2130012512207],
      [39.505001068115234, 63.12699890136719],
      [34.505001068115234, 63.12699890136719],
      [19.5049991607666, 63.12699890136719],
      [14.505000114440918, 63.12699890136719],
      [9.885000228881836, 61.2130012512207],
      [6.349999904632568, 57.678001403808594],
      [4.435999870300293, 53.05799865722656],
      [4.435999870300293, 48.05799865722656],
      [6.349999904632568, 52.678001403808594],
      [9.885000228881836, 56.2130012512207],
      [14.505000114440918, 58.12699890136719],
      [19.5049991607666, 58.12699890136719],
    ],
    [
      [29.70800018310547, 30.981000900268555],
      [29.95400047302246, 30.326000213623047],
      [29.986000061035156, 29.625999450683594],
      [29.799999237060547, 28.951000213623047],
      [29.415000915527344, 28.367000579833984],
      [28.868000030517578, 27.93000030517578],
      [28.21299934387207, 27.68400001525879],
      [27.51300048828125, 27.652000427246094],
      [26.83799934387207, 27.83799934387207],
      [26.253999710083008, 28.222999572753906],
      [25.816999435424805, 28.770999908447266],
      [25.570999145507812, 29.426000595092773],
      [25.538999557495117, 30.125],
      [25.725000381469727, 30.799999237060547],
      [26.110000610351562, 31.384000778198242],
      [26.658000946044922, 31.820999145507812],
      [27.312999725341797, 32.06700134277344],
      [28.011999130249023, 32.0989990234375],
      [28.687000274658203, 31.913000106811523],
      [29.270999908447266, 31.527999877929688],
      [29.70800018310547, 30.981000900268555],
    ],
    [
      [39.79600143432617, 26.594999313354492],
      [40.4379997253418, 26.315000534057617],
      [40.96200180053711, 25.851999282836914],
      [41.31700134277344, 25.24799919128418],
      [41.46900177001953, 24.565000534057617],
      [41.402000427246094, 23.868000030517578],
      [41.12200164794922, 23.22599983215332],
      [40.659000396728516, 22.70199966430664],
      [40.055999755859375, 22.347000122070312],
      [39.37200164794922, 22.19499969482422],
      [38.67499923706055, 22.261999130249023],
      [38.03300094604492, 22.54199981689453],
      [37.50899887084961, 23.0049991607666],
      [37.15399932861328, 23.607999801635742],
      [37.00199890136719, 24.29199981689453],
      [37.069000244140625, 24.98900032043457],
      [37.3489990234375, 25.631000518798828],
      [37.8120002746582, 26.155000686645508],
      [38.41600036621094, 26.510000228881836],
      [39.0989990234375, 26.66200065612793],
      [39.79600143432617, 26.594999313354492],
    ],
  ]; // Edit LCD Image!

setDocDimensions(width, height);

const t = new bt.Turtle();

//Base
t.jump([10, 10]);
t.setAngle(90);
t.arc(-90, 10);
t.setAngle(0);
t.goTo([35, 20]);
t.goTo([35, 10]);
t.goTo([10, 10]);
t.jump([65, 20]);
t.goTo([80, 20]);
t.arc(-90, 10);
t.goTo([65, 10]);
t.goTo([65, 20]);
t.jump([57, 15]);

//Center block
const center_block = [
  [
    [35, 20],
    [65, 20],
    [65, 10],
    [35, 10],
  ],
];
drawLines(center_block);

t.arc(360, 2);

//Screen and Knob
const screen = [
  [
    [38, 18],
    [38, 12],
    [53, 12],
    [53, 18],
    [38, 18],
  ],
];
drawLines(screen);

//Y Axis
const left_arm = [
  [
    [20, 20],
    [20, 75],
    [22, 75],
    [22, 20],
    [23, 20],
    [23, 75],
    [25, 75],
    [25, 20],
  ],
];
drawLines(left_arm);

const right_arm = [
  [
    [75, 20],
    [75, 75],
    [77, 75],
    [77, 20],
    [78, 20],
    [78, 75],
    [80, 75],
    [80, 20],
  ],
];
drawLines(right_arm);

const top = [
  [
    [17, 75],
    [17, 80],
    [83, 80],
    [83, 75],
    [17, 75],
  ],
];
drawLines(top);

//Plate
const plate = [
  [
    [40, 20],
    [40, 22],
    [30, 22],
    [30, 24],
    [70, 24],
    [70, 22],
    [60, 22],
    [60, 20],
    [55, 20],
    [55, 22],
    [45, 22],
    [45, 20],
    [40, 20],
    [40, 22],
    [60, 22],
  ],
];
drawLines(plate);

//X Axis
const x_axis_left = [
  [
    [25, y],
    [x, y],
    [x, y + rail_width],
    [25, y + rail_width],
    [25, y + (5 - rail_width)],
    [x, y + (5 - rail_width)],
    [x, y + 5],
    [25, y + 5],
  ],
];
drawLines(x_axis_left);

const x_axis_right = [
  [
    [75, y],
    [x + 10, y],
    [x + 10, y + rail_width],
    [75, y + rail_width],
    [75, y + (5 - rail_width)],
    [x + 10, y + (5 - rail_width)],
    [x + 10, y + 5],
    [75, y + 5],
  ],
];
drawLines(x_axis_right);

//Extruder

t.jump([x, y + 7]);
t.setAngle(90);
t.arc(-90, 1);
t.goTo([x + 9, y + 8]);
t.arc(-90, 1);
t.goTo([x + 10, y - 4]);
t.arc(-90, 1);
t.goTo([x + 1, y - 5]);
t.arc(-90, 1);
t.goTo([x, y + 7]);

let pos = null;

t.jump([x + 1, y + 2]);
t.setAngle(-90);
for (let a = 0; a <= 20; a++) {
  t.arc(18, 4);
  pos = t.pos;
  t.goTo([x + 5, y + 2]);
  t.goTo(pos);
}

t.jump([x + 4, y - 5]);
t.goTo([x + 4, y - 6]);
t.goTo([x + 6, y - 6]);
t.jump([x + 4, y - 6]);
t.goTo([x + 4.75, y - 7]);
t.goTo([x + 5.25, y - 7]);
t.goTo([x + 6, y - 6]);
t.goTo([x + 6, y - 5]);

let wire = [];
t.jump([x + 6, y + 8]);
let turtle = t.pos;
let offset = 0;
for (let i = 1; i <= 150; i++) {
  let curves = [
    bt.nurbs([
      [turtle[0] + offset, turtle[1]],
      [60, 90 - offset],
      [75, 78 - offset],
    ]),
  ];
  bt.join(wire, curves);
  offset = offset - 0.01;
}
drawLines(wire);

const v = new bt.Turtle()
v.jump([55, 24])
v.goTo([45, 24])
v.right(180)
v.arc(-90, 5)
v.goTo([40, 45])
v.arc(-90, 5)
v.goTo([45, 58])
v.goTo([42, 58])
v.goTo([42, 60])
v.goTo([58, 60])
v.goTo([58, 58])
v.goTo([55, 58])
v.goTo([55, 50])
v.arc(-90, 5)
v.goTo([60, 29])
v.arc(-90, 5)

let cutter = v.lines()
  
let print = [[
  [30, 24],
  [70, 24]
]]
for(let y = 0; y <=10000; y++) {
  let line = [[
    [30, 24+(y*0.3)],
    [70, 24+(y*0.3)]
  ]]
  bt.join(print, line)
}
const final = bt.cut(print, cutter)

let whiteout = [[
  [25, y-7],
  [25, 75],
  [75, 75],
  [75, y-7] 
]]

//Thanks to another Blot project for SVG data!
bt.rotate(img, 180);
bt.scale(img, 0.075);
bt.translate(img, [19, -18.5]);
drawLines(img)

bt.cover(final, whiteout)
drawLines(final)

drawLines(t.lines());
